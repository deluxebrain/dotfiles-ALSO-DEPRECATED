#!/usr/bin/env bash

SCRIPT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_PATH" || exit 1

if (( $(id -u) != 0 )); then
  echo "This script must be run as root"
  echo "Please use sudo or su"
  exit 1
fi

function strip_whitespace()
{
  echo "${1// }"
}

function user_pause()
{
  read -r -p "Hit enter to continue "
}

function user_prompt()
{
  echo >&2
  while [ -z "$(strip_whitespace $REPLY)" ]; do
    read -r -p "$1: "
  done
  echo "$REPLY"
}

function user_confirm()
{
  echo >&2
  while [[ ! $REPLY =~ ^[YyNn]$ ]]; do
    read -r -p "$1 (y/n) "
  done
  [[ $REPLY =~ ^[Yy$ ]]
}

function ui()
{
  export GIT_USERNAME
  export GIT_USEREMAIL

  if [[ -n "$(git config --global --includes user.name)" && \
    -n "$(git config --global --includes user.email)" ]]; then
    GIT_USERNAME="$(git config --global --includes user.name)"
    GIT_USEREMAIL="$(git config --global --includes user.email)"
  else
    GIT_USERNAME="$(user_prompt "Enter git user name")"
    GIT_USEREMAIL="$(user_prompt "Enter git email")"
  fi
}

function create_dotfiles_group()
{
  grep -q -F dotfiles /etc/group \
    || sudo groupadd dotfiles \
    || return

  sudo usermod -a -G dotfiles "${SUDO_USER:-$USER}"
}

function install_packages()
{
  ./packages/common-packages || return
  ./packages/python-packages || return
}

function main()
{
  git submodule update --init --recursive >/dev/null 2>&1 || return
  git submodule foreach git checkout master >/dev/null 2>&1 || return

  ui || return

  create_dotfiles_group || return

  echo "INFO: Setting up dotfiles" >&2
  ./scripts/setup-dotfiles dotfiles || return

  echo "INFO: Running all installers" >&2
  ./scripts/setup-installers || return

  echo "INFO: Installing packages" >&2
  install_packages || return
}

main "$@"
exit $?

