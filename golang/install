#!/usr/bin/env bash

# Note wrt how latest version detection is performed:
# Go releases are not marked as such in github and hence the following does not work:
# GITHUB_META_URL="https://api.github.com/repos/golang/go/releases/latest"

set -eou pipefail

echo "Installing go" >&2

DOWNLOAD_STEM_URL="https://golang.org/dl/"
DOWNLOAD_URL=
VERSION=
ARCHIVE=

# Create temporary working directory
# Delete it on exit
TMPDIR="$(mktemp -d)"
trap 'rm -rf "$TMPDIR"' EXIT

# -o: only show matched parts of a matching line
# -E: extended regular expressions
DOWNLOAD_URL="$( \
    curl -s "$DOWNLOAD_STEM_URL" \
        | grep -o -E 'https://dl.google.com/go/go[0-9\.]+\.linux-amd64\.tar\.gz' \
        | head -n 1 \
)"

[[ $DOWNLOAD_URL =~ go([0-9\.]+)\. ]] || exit
VERSION="${BASH_REMATCH[1]}"

echo "Installing go version: $VERSION" >&2
echo "Using download url: $DOWNLOAD_URL" >&2
ARCHIVE="$(basename $DOWNLOAD_URL)"
# -O: specify destination filename
wget -O "$TMPDIR/$ARCHIVE" "$DOWNLOAD_URL"

# Extract and uncompress go
# -C: set destination directory
# -z: uncompress using gzip
# -x: extract files
# -f: compressed file ( must be last option )
[ -d /usr/local/go ] && sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "$TMPDIR/$ARCHIVE"

# Create go workspace
[ -d "$GOPATH" ] || mkdir -p "$GOPATH"
