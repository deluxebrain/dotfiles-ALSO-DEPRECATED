#!/bin/bash

function usage()
{
  cat <<EOF
Usage $0 [install, versions, distributions] [distribution]
EOF

  return 1
}

function get_latest_version()
{
    pyenv install --list \
    | sed -n 's/^[ \t]*\(\(\(.*\)-\)\?\([0-9]*\.[0-9]*\.[0-9]*\)\)$/\3,\4,\1/p' \
    | sort -k1V \
    | awk -F"," -v distribution="$1" '$1==distribution {print $3}' \
    | tail -n1 \
    | awk 'END { if (NR != 0) { print; exit 0 } else { exit 1 }}'
}

function versions()
{
    pyenv install --list \
    | sed -n 's/^[ \t]*\(\(\(.*\)-\)\?\([0-9]*\.[0-9]*\.[0-9]*\)\)$/\3,\4,\1/p' \
    | sort -k1V \
    | awk -F"," -v distribution="$1" '$1==distribution {print $3}'
}

function distributions()
{
    pyenv install --list \
    | sed -n 's/^[ \t]*\(\(\(.*\)-\)\?\([0-9]*\.[0-9]*\.[0-9]*\)\)$/\3/p' \
    | sed 's/^$/python/' \
    | sort \
    | uniq
}

function install()
{
    local name="$1"
    local version

    version="$(get_latest_version "$name")"
    if (( $? != 0 )); then
        echo "ERROR: Distribution $name not found" >&2
        false; return
    fi

    echo "INFO: Installing $version" >&2
    if ! pyenv install "$version"; then
        echo "ERROR: Installation of $version failed" >&2
        false; return
    fi
}

ACTION="$1"; shift
if [ -z "$ACTION" ]; then
  usage
  exit
fi

case "$ACTION" in
install) install "$@";;
versions) versions "$@";;
distributions) distributions "$@";;
*) usage; exit;;
esac

